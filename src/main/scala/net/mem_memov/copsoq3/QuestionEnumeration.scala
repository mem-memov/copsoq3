package net.mem_memov.copsoq3

import net.mem_memov.copsoq3.question

enum QuestionEnumeration(question: Question):
  def getQuestion: Question = question
  case QuantitativeDemands1 extends QuestionEnumeration(question.QuantitativeDemands1)
  case QuantitativeDemands2 extends QuestionEnumeration(question.QuantitativeDemands2)
  case QuantitativeDemands3 extends QuestionEnumeration(question.QuantitativeDemands3)
  case QuantitativeDemands4 extends QuestionEnumeration(question.QuantitativeDemands4)
  case WorkPace1 extends QuestionEnumeration(question.WorkPace1)
  case WorkPace2 extends QuestionEnumeration(question.WorkPace2)
  case WorkPace3 extends QuestionEnumeration(question.WorkPace3)
  case CognitiveDemands1 extends QuestionEnumeration(question.CognitiveDemands1)
  case CognitiveDemands2 extends QuestionEnumeration(question.CognitiveDemands2)
  case CognitiveDemands3 extends QuestionEnumeration(question.CognitiveDemands3)
  case CognitiveDemands4 extends QuestionEnumeration(question.CognitiveDemands4)
  case EmotionalDemands1 extends QuestionEnumeration(question.EmotionalDemands1)
  case EmotionalDemands2 extends QuestionEnumeration(question.EmotionalDemands2)
  case EmotionalDemands3 extends QuestionEnumeration(question.EmotionalDemands3)
  case DemandsForHidingEmotions1 extends QuestionEnumeration(question.DemandsForHidingEmotions1)
  case DemandsForHidingEmotions2 extends QuestionEnumeration(question.DemandsForHidingEmotions2)
  case DemandsForHidingEmotions3 extends QuestionEnumeration(question.DemandsForHidingEmotions3)
  case DemandsForHidingEmotions4 extends QuestionEnumeration(question.DemandsForHidingEmotions4)
  case InfluenceAtWork1 extends QuestionEnumeration(question.InfluenceAtWork1)
  case InfluenceAtWork2 extends QuestionEnumeration(question.InfluenceAtWork2)
  case InfluenceAtWork3 extends QuestionEnumeration(question.InfluenceAtWork3)
  case InfluenceAtWork4 extends QuestionEnumeration(question.InfluenceAtWork4)
  case InfluenceAtWork5 extends QuestionEnumeration(question.InfluenceAtWork5)
  case InfluenceAtWork6 extends QuestionEnumeration(question.InfluenceAtWork6)
  case PossibilitiesForDevelopment2 extends QuestionEnumeration(question.PossibilitiesForDevelopment2)
  case PossibilitiesForDevelopment3 extends QuestionEnumeration(question.PossibilitiesForDevelopment3)
  case PossibilitiesForDevelopment4 extends QuestionEnumeration(question.PossibilitiesForDevelopment4)
  case VariationOfWork1 extends QuestionEnumeration(question.VariationOfWork1)
  case VariationOfWork2 extends QuestionEnumeration(question.VariationOfWork2)
  case ControlOverWorkingTime1 extends QuestionEnumeration(question.ControlOverWorkingTime1)
  case ControlOverWorkingTime2 extends QuestionEnumeration(question.ControlOverWorkingTime2)
  case ControlOverWorkingTime3 extends QuestionEnumeration(question.ControlOverWorkingTime3)
  case ControlOverWorkingTime4 extends QuestionEnumeration(question.ControlOverWorkingTime4)
  case ControlOverWorkingTime5 extends QuestionEnumeration(question.ControlOverWorkingTime5)
  case MeaningOfWork1 extends QuestionEnumeration(question.MeaningOfWork1)
  case MeaningOfWork2 extends QuestionEnumeration(question.MeaningOfWork2)
  case Predictability1 extends QuestionEnumeration(question.Predictability1)
  case Predictability2 extends QuestionEnumeration(question.Predictability2)
  case Recognition1 extends QuestionEnumeration(question.Recognition1)
  case Recognition2 extends QuestionEnumeration(question.Recognition2)
  case Recognition3 extends QuestionEnumeration(question.Recognition3)
  case RoleClarity1 extends QuestionEnumeration(question.RoleClarity1)
  case RoleClarity2 extends QuestionEnumeration(question.RoleClarity2)
  case RoleClarity3 extends QuestionEnumeration(question.RoleClarity3)
  case RoleConflicts2 extends QuestionEnumeration(question.RoleConflicts2)
  case RoleConflicts3 extends QuestionEnumeration(question.RoleConflicts3)
  case IllegitimateTasks1 extends QuestionEnumeration(question.IllegitimateTasks1)
  case QualityOfLeadership1 extends QuestionEnumeration(question.QualityOfLeadership1)
  case QualityOfLeadership2 extends QuestionEnumeration(question.QualityOfLeadership2)
  case QualityOfLeadership3 extends QuestionEnumeration(question.QualityOfLeadership3)
  case QualityOfLeadership4 extends QuestionEnumeration(question.QualityOfLeadership4)
  case SocialSupportFromSupervisor1 extends QuestionEnumeration(question.SocialSupportFromSupervisor1)
  case SocialSupportFromSupervisor2 extends QuestionEnumeration(question.SocialSupportFromSupervisor2)
  case SocialSupportFromSupervisor3 extends QuestionEnumeration(question.SocialSupportFromSupervisor3)
  case SocialSupportFromColleagues1 extends QuestionEnumeration(question.SocialSupportFromColleagues1)
  case SocialSupportFromColleagues2 extends QuestionEnumeration(question.SocialSupportFromColleagues2)
  case SocialSupportFromColleagues3 extends QuestionEnumeration(question.SocialSupportFromColleagues3)
  case SenseOfCommunityAtWork1 extends QuestionEnumeration(question.SenseOfCommunityAtWork1)
  case SenseOfCommunityAtWork2 extends QuestionEnumeration(question.SenseOfCommunityAtWork2)
  case SenseOfCommunityAtWork3 extends QuestionEnumeration(question.SenseOfCommunityAtWork3)
  case CommitmentToTheWorkplace1 extends QuestionEnumeration(question.CommitmentToTheWorkplace1)
  case CommitmentToTheWorkplace2 extends QuestionEnumeration(question.CommitmentToTheWorkplace2)
  case CommitmentToTheWorkplace3 extends QuestionEnumeration(question.CommitmentToTheWorkplace3)
  case CommitmentToTheWorkplace4 extends QuestionEnumeration(question.CommitmentToTheWorkplace4)
  case CommitmentToTheWorkplace5 extends QuestionEnumeration(question.CommitmentToTheWorkplace5)
  case WorkEngagement1 extends QuestionEnumeration(question.WorkEngagement1)
  case WorkEngagement2 extends QuestionEnumeration(question.WorkEngagement2)
  case WorkEngagement3 extends QuestionEnumeration(question.WorkEngagement3)
  case JobInsecurity1 extends QuestionEnumeration(question.JobInsecurity1)
  case JobInsecurity2 extends QuestionEnumeration(question.JobInsecurity2)
  case JobInsecurity3 extends QuestionEnumeration(question.JobInsecurity3)
  case InsecurityOverWorkingConditions1 extends QuestionEnumeration(question.InsecurityOverWorkingConditions1)
  case InsecurityOverWorkingConditions2 extends QuestionEnumeration(question.InsecurityOverWorkingConditions2)
  case InsecurityOverWorkingConditions3 extends QuestionEnumeration(question.InsecurityOverWorkingConditions3)
  case InsecurityOverWorkingConditions4 extends QuestionEnumeration(question.InsecurityOverWorkingConditions4)
  case InsecurityOverWorkingConditions5 extends QuestionEnumeration(question.InsecurityOverWorkingConditions5)
  case QualityOfWork1 extends QuestionEnumeration(question.QualityOfWork1)
  case QualityOfWork2 extends QuestionEnumeration(question.QualityOfWork2)
  case JobSatisfaction1 extends QuestionEnumeration(question.JobSatisfaction1)
  case JobSatisfaction2 extends QuestionEnumeration(question.JobSatisfaction2)
  case JobSatisfaction3 extends QuestionEnumeration(question.JobSatisfaction3)
  case JobSatisfaction4 extends QuestionEnumeration(question.JobSatisfaction4)
  case JobSatisfaction5 extends QuestionEnumeration(question.JobSatisfaction5)
  case WorkLifeConflict1 extends QuestionEnumeration(question.WorkLifeConflict1)
  case WorkLifeConflict2 extends QuestionEnumeration(question.WorkLifeConflict2)
  case WorkLifeConflict3 extends QuestionEnumeration(question.WorkLifeConflict3)
  case WorkLifeConflict5 extends QuestionEnumeration(question.WorkLifeConflict5)
  case WorkLifeConflict6 extends QuestionEnumeration(question.WorkLifeConflict6)
  case HorizontalTrust1 extends QuestionEnumeration(question.HorizontalTrust1)
  case HorizontalTrust2 extends QuestionEnumeration(question.HorizontalTrust2)
  case HorizontalTrust3 extends QuestionEnumeration(question.HorizontalTrust3)
  case VerticalTrust1 extends QuestionEnumeration(question.VerticalTrust1)
  case VerticalTrust2 extends QuestionEnumeration(question.VerticalTrust2)
  case VerticalTrust3 extends QuestionEnumeration(question.VerticalTrust3)
  case VerticalTrust4 extends QuestionEnumeration(question.VerticalTrust4)
  case OrganizationalJustice1 extends QuestionEnumeration(question.OrganizationalJustice1)
  case OrganizationalJustice2 extends QuestionEnumeration(question.OrganizationalJustice2)
  case OrganizationalJustice3 extends QuestionEnumeration(question.OrganizationalJustice3)
  case OrganizationalJustice4 extends QuestionEnumeration(question.OrganizationalJustice4)
  case GossipAndSlander1 extends QuestionEnumeration(question.GossipAndSlander1)
  case GossipAndSlander2 extends QuestionEnumeration(question.GossipAndSlander2)
  case ConflictsAndQuarrels1 extends QuestionEnumeration(question.ConflictsAndQuarrels1)
  case UnpleasantTeasing1 extends QuestionEnumeration(question.UnpleasantTeasing1)
  case UnpleasantTeasing2 extends QuestionEnumeration(question.UnpleasantTeasing2)
  case CyberBullying1 extends QuestionEnumeration(question.CyberBullying1)
  case CyberBullying2 extends QuestionEnumeration(question.CyberBullying2)
  case SexualHarassment1 extends QuestionEnumeration(question.SexualHarassment1)
  case SexualHarassment2 extends QuestionEnumeration(question.SexualHarassment2)
  case ThreatsOfViolence1 extends QuestionEnumeration(question.ThreatsOfViolence1)
  case ThreatsOfViolence2 extends QuestionEnumeration(question.ThreatsOfViolence2)
  case PhysicalViolence1 extends QuestionEnumeration(question.PhysicalViolence1)
  case PhysicalViolence2 extends QuestionEnumeration(question.PhysicalViolence2)
  case Bullying1 extends QuestionEnumeration(question.Bullying1)
  case Bullying2 extends QuestionEnumeration(question.Bullying2)
  case Bullying3 extends QuestionEnumeration(question.Bullying3)
  case SelfRatedHealth1 extends QuestionEnumeration(question.SelfRatedHealth1)
  case SelfRatedHealth2 extends QuestionEnumeration(question.SelfRatedHealth2)
  case SleepingTroubles1 extends QuestionEnumeration(question.SleepingTroubles1)
  case SleepingTroubles2 extends QuestionEnumeration(question.SleepingTroubles2)
  case SleepingTroubles3 extends QuestionEnumeration(question.SleepingTroubles3)
  case SleepingTroubles4 extends QuestionEnumeration(question.SleepingTroubles4)
  case Burnout1 extends QuestionEnumeration(question.Burnout1)
  case Burnout2 extends QuestionEnumeration(question.Burnout2)
  case Burnout3 extends QuestionEnumeration(question.Burnout3)
  case Burnout4 extends QuestionEnumeration(question.Burnout4)
  case Stress1 extends QuestionEnumeration(question.Stress1)
  case Stress2 extends QuestionEnumeration(question.Stress2)
  case Stress3 extends QuestionEnumeration(question.Stress3)
  case SomaticStress1 extends QuestionEnumeration(question.SomaticStress1)
  case SomaticStress2 extends QuestionEnumeration(question.SomaticStress2)
  case SomaticStress3 extends QuestionEnumeration(question.SomaticStress3)
  case SomaticStress4 extends QuestionEnumeration(question.SomaticStress4)
  case CognitiveStress1 extends QuestionEnumeration(question.CognitiveStress1)
  case CognitiveStress2 extends QuestionEnumeration(question.CognitiveStress2)
  case CognitiveStress3 extends QuestionEnumeration(question.CognitiveStress3)
  case CognitiveStress4 extends QuestionEnumeration(question.CognitiveStress4)
  case DepressiveSymptoms1 extends QuestionEnumeration(question.DepressiveSymptoms1)
  case DepressiveSymptoms2 extends QuestionEnumeration(question.DepressiveSymptoms2)
  case DepressiveSymptoms3 extends QuestionEnumeration(question.DepressiveSymptoms3)
  case DepressiveSymptoms4 extends QuestionEnumeration(question.DepressiveSymptoms4)
  case SelfEfficacy1 extends QuestionEnumeration(question.SelfEfficacy1)
  case SelfEfficacy2 extends QuestionEnumeration(question.SelfEfficacy2)
  case SelfEfficacy3 extends QuestionEnumeration(question.SelfEfficacy3)
  case SelfEfficacy4 extends QuestionEnumeration(question.SelfEfficacy4)
  case SelfEfficacy5 extends QuestionEnumeration(question.SelfEfficacy5)
  case SelfEfficacy6 extends QuestionEnumeration(question.SelfEfficacy6)

object QuestionEnumeration:

  def getAll: Array[QuestionEnumeration] =

    QuestionEnumeration.values





//  val questionCodes = QuestionEnumeration.values.map(_.question.code)